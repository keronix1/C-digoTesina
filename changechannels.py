# -*- coding: utf-8 -*-
"""ChangeChannels.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RXsxF7t76PI-ynpU5HzZIJvl6zZvwMW_
"""

import numpy as np
import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
from torch.utils.data import DataLoader
from torch.utils.data import random_split
import torchvision.transforms as transforms
import torchvision.datasets as datasets
import matplotlib.pyplot as plt
import cv2
import os
from PIL import Image

from torchvision import models

from google.colab import drive
drive.mount('/content/drive')
original_path = '/content/drive/My Drive/ImagenesTesina'

grayscale_path = '/content/drive/My Drive/CanalesCorrectosImagenes'

"""***Código para cambio a grises***"""

for subdir, dirs, files in os.walk(original_path):
    for file in files:
        # Carga la imagen original
        img_path = os.path.join(subdir, file)
        img = Image.open(img_path)

        # Convierte la imagen a escala de grises
        gray_img = img.convert('L')

        # Guarda la imagen en la carpeta de imágenes en escala de grises
        save_path = os.path.join(grayscale_path, file)
        gray_img.save(save_path, 'JPEG')

"""***Prueba y confirmación de imágenes de 1 canal***"""

cont=0

for subdir, dirs, files in os.walk(grayscale_path):
    
    for file in files:
        # Carga la imagen
        img_path = os.path.join(subdir, file)
        img = Image.open(img_path)
        
        img_np = np.array(img)

        #print(len(img_np.shape))

        # Verifica el número de canales
        if img.mode != 'L':
            print(f'La imagen {img_path} no está en escala de grises.')
            
        else:
            print(f'La imagen {img_path} está en escala de grises.')
            cont+=1
            print(cont)

        # Cierra la imagen
        img.close()

"""***Código para calcular la desviación estándar y media***"""

import os
import cv2
import numpy as np
from google.colab import drive

# Montar Google Drive en Colab
drive.mount('/content/drive')

# Establecer la ruta a la carpeta que contiene las imágenes en Google Drive
image_directory = '/content/drive/My Drive/CanalesCorrectosImagenes/genu varo'

# Variables para almacenar los valores de media y desviación estándar
mean_values = []
std_values = []

# Iterar sobre los archivos de la carpeta y calcular media y desviación estándar
for file_name in os.listdir(image_directory):
    image_path = os.path.join(image_directory, file_name)
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    mean = np.mean(image)
    std = np.std(image)
    mean_values.append(mean)
    std_values.append(std)

# Calcular la media y desviación estándar total
mean_total = np.mean(mean_values)
std_total = np.mean(std_values)

# Imprimir los resultados
print("Media:", mean_total)
print("Desviación estándar:", std_total)

"""***Pruebas:Código para calcular la desviación estándar y media***"""

import os
import cv2
import numpy as np
from google.colab import drive

# Montar Google Drive en Colab
drive.mount('/content/drive')

# Establecer la ruta a la carpeta que contiene las imágenes en Google Drive
image_directory = '/content/drive/My Drive/CanalesCorrectosImagenes/genu valgo'

# Variables para almacenar los valores de media y desviación estándar
mean_values = []
std_values = []

# Iterar sobre los archivos de la carpeta y calcular media y desviación estándar
for file_name in os.listdir(image_directory):
    image_path = os.path.join(image_directory, file_name)
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    mean = np.mean(image)
    std = np.std(image)
    mean_values.append(mean)
    std_values.append(std)

# Calcular la media y desviación estándar total
mean_total = np.mean(mean_values)
std_total = np.mean(std_values)

# Imprimir los resultados
print("Media:", mean_total)
print("Desviación estándar:", std_total)

import cv2
import numpy as np
import os
from google.colab import drive

# Montar Google Drive en Colab
drive.mount('/content/drive')

# Establecer la ruta a la carpeta principal que contiene las dos carpetas en Google Drive
main_directory = '/content/drive/My Drive/CanalesCorrectosImagenes'

# Variables para almacenar los valores de media y desviación estándar
mean_values = []
std_values = []

# Iterar sobre las dos carpetas y calcular media y desviación estándar
for folder_name in os.listdir(main_directory):
    folder_path = os.path.join(main_directory, folder_name)

    # Verificar que la ruta sea una carpeta
    if os.path.isdir(folder_path):
        for file_name in os.listdir(folder_path):
            image_path = os.path.join(folder_path, file_name)
            image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

            # Normalizar la imagen
            normalized_image = image / 255.0

            # Calcular la media y desviación estándar
            mean = np.mean(normalized_image)
            std = np.std(normalized_image)

            mean_values.append(mean)
            std_values.append(std)

# Calcular la media y desviación estándar total
mean_total = np.mean(mean_values)
std_total = np.mean(std_values)

# Imprimir los resultados
print("Media:", mean_total)
print("Desviación estándar:", std_total)